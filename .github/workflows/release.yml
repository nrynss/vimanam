name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Vimanam ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            # Vimanam ${{ github.ref_name }}

            OpenAPI/Swagger JSON to Markdown documentation generator.

            ## Features:
            - Convert OpenAPI JSON files to Markdown documentation
            - Group endpoints by service or HTTP method
            - Filter by service, path, or method
            - Multiple detail levels (summary, basic, standard, full)
            - Sorting options for endpoints

            ## Downloads:
            Binaries for Linux, macOS, and Windows are attached to this release.

  build-and-upload:
    name: Build and Upload
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: vimanam
            asset_name: vimanam-linux-amd64
          - os: windows-latest
            artifact_name: vimanam.exe
            asset_name: vimanam-windows-amd64.exe
          - os: macos-latest
            artifact_name: vimanam
            asset_name: vimanam-macos-amd64

    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Release Asset (Linux/macOS)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
